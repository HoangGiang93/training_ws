<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="iai_donbot">
    <xacro:include filename="$(find iai_donbot_description)/urdf/iai_donbot.xacro"/>
    <xacro:include filename="$(find iai_donbot_description)/urdf/include/iai_donbot_odom.xacro"/> 
    
    <xacro:include filename="$(find iai_donbot_gazebo)/urdf/iai_donbot.transmission.xacro"/>
    <xacro:ur_arm_transmission prefix="ur5_"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find iai_donbot_gazebo)/config/iai_donbot_control.yaml" command="load"/>   

    <gazebo reference="">
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>iai_donbot</robotNamespace>
        </plugin>
        <self_collide>1</self_collide>
    </gazebo>

      <!-- camera -->
    <gazebo reference="camera_link">
        <sensor type="camera" name="camera">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                <width>800</width>
                <height>800</height>
                <format>R8G8B8</format>
                </image>
                <clip>
                <near>0.02</near>
                <far>300</far>
                </clip>
                <noise>
                <type>gaussian</type>
                <!-- Noise is sampled independently per pixel on each frame.
                    That pixel's noise value is added to each of its color
                    channels, which at that point lie in the range [0,1]. -->
                <mean>0.0</mean>
                <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>iai_donbot/camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <joint name="hokuyo_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="laser_reference_front"/>
        <child link="hokuyo_link"/>
    </joint>

    <!-- Hokuyo Laser -->
    <link name="hokuyo_link">
    </link>

    <link name="world">
    </link>
    <joint name="world_joint" type="fixed">
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <parent link="world"/>
        <child link="odom"/>
    </joint>

    <!-- hokuyo -->
    <gazebo reference="hokuyo_link">
        <sensor type="gpu_ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
            <scan>
            <horizontal>
                <samples>720</samples>
                <resolution>1</resolution>
                <min_angle>-1.570796</min_angle>
                <max_angle>1.570796</max_angle>
            </horizontal>
            </scan>
            <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
            </range>
            <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
            <topicName>/iai_donbot/laser/scan</topicName>
            <frameName>hokuyo_link</frameName>
        </plugin>
        </sensor>
    </gazebo>

</robot>